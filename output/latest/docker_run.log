Active extensions ['devices', 'name', 'network', 'privileged', 'user', 'volume', 'x11']
Writing dockerfile to /tmp/tmp3ld3r960/Dockerfile
vvvvvv
# Preamble from extension [devices]

# Preamble from extension [name]

# Preamble from extension [network]

# Preamble from extension [privileged]

# Preamble from extension [user]

# Preamble from extension [volume]

# Preamble from extension [x11]


FROM aichallenge-2025-dev-ubuntu
USER root
# Snippet from extension [devices]

# Snippet from extension [name]

# Snippet from extension [network]

# Snippet from extension [privileged]

# Snippet from extension [user]
# make sure sudo is installed to be able to give user sudo access in docker
RUN if ! command -v sudo >/dev/null; then \
      apt-get update \
      && apt-get install -y sudo \
      && apt-get clean; \
    fi

RUN existing_user_by_uid=`getent passwd "1000" | cut -f1 -d: || true` && \
    if [ -n "${existing_user_by_uid}" ]; then userdel -r "${existing_user_by_uid}"; fi && \
    existing_user_by_name=`getent passwd "ubuntu" | cut -f1 -d: || true` && \
    existing_user_uid=`getent passwd "ubuntu" | cut -f3 -d: || true` && \
    if [ -n "${existing_user_by_name}" ]; then find / -uid ${existing_user_uid} -exec chown -h 1000 {} + || true ; find / -gid ${existing_user_uid} -exec chgrp -h 1000 {} + || true ; fi && \
    if [ -n "${existing_user_by_name}" ]; then userdel -r "${existing_user_by_name}"; fi && \
    existing_group_by_gid=`getent group "1000" | cut -f1 -d: || true` && \
    if [ -z "${existing_group_by_gid}" ]; then \
      groupadd -g "1000" "ubuntu"; \
    fi && \
    useradd --no-log-init --no-create-home --uid "1000" -s /bin/bash -c "ubuntu" -g "1000" -d "/home/ubuntu" "ubuntu" && \
    echo "ubuntu ALL=NOPASSWD: ALL" >> /etc/sudoers.d/rocker

# Making sure a home directory exists if we haven't mounted the user's home directory explicitly
RUN mkdir -p "$(dirname "/home/ubuntu")" && mkhomedir_helper ubuntu
WORKDIR /home/ubuntu

# Snippet from extension [volume]

# Snippet from extension [x11]

USER ubuntu
# User Snippet from extension [devices]

# User Snippet from extension [name]

# User Snippet from extension [network]

# User Snippet from extension [privileged]

# User Snippet from extension [user]

# User Snippet from extension [volume]

# User Snippet from extension [x11]


^^^^^^
Building docker file with arguments:  {'path': '/tmp/tmp3ld3r960', 'rm': True, 'nocache': False, 'pull': False}
building > Step 1/7 : FROM aichallenge-2025-dev-ubuntu
building >  ---> 71e44af20264
building > Step 2/7 : USER root
building >  ---> Running in 98fa260c0f89
building >  ---> Removed intermediate container 98fa260c0f89
building >  ---> 4d7314a1e815
building > Step 3/7 : RUN if ! command -v sudo >/dev/null; then       apt-get update       && apt-get install -y sudo       && apt-get clean;     fi
building >  ---> Running in 78a1c2f88532
building >  ---> Removed intermediate container 78a1c2f88532
building >  ---> a6cf44a5a21b
building > Step 4/7 : RUN existing_user_by_uid=`getent passwd "1000" | cut -f1 -d: || true` &&     if [ -n "${existing_user_by_uid}" ]; then userdel -r "${existing_user_by_uid}"; fi &&     existing_user_by_name=`getent passwd "ubuntu" | cut -f1 -d: || true` &&     existing_user_uid=`getent passwd "ubuntu" | cut -f3 -d: || true` &&     if [ -n "${existing_user_by_name}" ]; then find / -uid ${existing_user_uid} -exec chown -h 1000 {} + || true ; find / -gid ${existing_user_uid} -exec chgrp -h 1000 {} + || true ; fi &&     if [ -n "${existing_user_by_name}" ]; then userdel -r "${existing_user_by_name}"; fi &&     existing_group_by_gid=`getent group "1000" | cut -f1 -d: || true` &&     if [ -z "${existing_group_by_gid}" ]; then       groupadd -g "1000" "ubuntu";     fi &&     useradd --no-log-init --no-create-home --uid "1000" -s /bin/bash -c "ubuntu" -g "1000" -d "/home/ubuntu" "ubuntu" &&     echo "ubuntu ALL=NOPASSWD: ALL" >> /etc/sudoers.d/rocker
building >  ---> Running in c316583b2bd2
building >  ---> Removed intermediate container c316583b2bd2
building >  ---> b97bf7380236
building > Step 5/7 : RUN mkdir -p "$(dirname "/home/ubuntu")" && mkhomedir_helper ubuntu
building >  ---> Running in b09de333dfa2
building >  ---> Removed intermediate container b09de333dfa2
building >  ---> bd7925cc4e7f
building > Step 6/7 : WORKDIR /home/ubuntu
building >  ---> Running in 855271a34eb2
building >  ---> Removed intermediate container 855271a34eb2
building >  ---> 8548d732baed
building > Step 7/7 : USER ubuntu
building >  ---> Running in 3c85427640c8
building >  ---> Removed intermediate container 3c85427640c8
building >  ---> 9bbc3f2db316
building > Successfully built 9bbc3f2db316
Executing command: 
docker run --rm -it --device /dev/dri  --name aichallenge-2025-2025-08-10-19-20-23  --network host  --privileged -v /home/ubuntu/aichallenge-2025/output:/output -v /home/ubuntu/aichallenge-2025/aichallenge:/aichallenge -v /home/ubuntu/aichallenge-2025/remote:/remote -v /home/ubuntu/aichallenge-2025/vehicle:/vehicle  -e DISPLAY -e TERM   -e QT_X11_NO_MITSHM=1   -e XAUTHORITY=/tmp/.dockern6w7clqy.xauth -v /tmp/.dockern6w7clqy.xauth:/tmp/.dockern6w7clqy.xauth   -v /tmp/.X11-unix:/tmp/.X11-unix   -v /etc/localtime:/etc/localtime:ro  9bbc3f2db316 
7[r[9999;9999H[6n8[?2004h]0;(AIC_DEV) ubuntu@ubuntu-HP-Laptop-14s-dq5xxx: /aichallenge(AIC_DEV) [01;32mubuntu@ubuntu-HP-Laptop-14s-dq5xxx[00m:[01;34m/aichallenge[00m$ 